# Keycloak with Let's Encrypt in a Docker Swarm

# Install Docker Swarm by following my guide: https://www.heyvaldemar.com/install-docker-swarm-on-ubuntu-server/

# Configure Traefik and create secrets for storing the passwords on the Docker Swarm manager node before applying the configuration.
# Traefik configuration: https://github.com/heyValdemar/traefik-letsencrypt-docker-swarm

# Run keycloak-restore-database.sh on the Docker Swarm node where the container for backups is running to restore database if needed.
# Run docker stack ps keycloak | grep keycloak_backups | awk 'NR > 0 {print $4}' on the Docker Swarm manager node to find on which node container for backups is running.

# Deploy Keycloak in a Docker Swarm using the command:
# docker stack deploy -c keycloak-traefik-letsencrypt-docker-swarm.yml keycloak

# Author
# Iâ€™m Vladimir Mikhalev, the Docker Captain, but my friends can call me Valdemar.
# https://www.docker.com/captains/vladimir-mikhalev/

# My website with detailed IT guides: https://www.heyvaldemar.com/
# Follow me on YouTube: https://www.youtube.com/channel/UCf85kQ0u1sYTTTyKVpxrlyQ?sub_confirmation=1
# Follow me on Twitter: https://twitter.com/heyValdemar
# Follow me on Instagram: https://www.instagram.com/heyvaldemar/
# Follow me on Threads: https://www.threads.net/@heyvaldemar
# Follow me on Mastodon: https://mastodon.social/@heyvaldemar
# Follow me on Bluesky: https://bsky.app/profile/heyvaldemar.bsky.social
# Follow me on Facebook: https://www.facebook.com/heyValdemarFB/
# Follow me on TikTok: https://www.tiktok.com/@heyvaldemar
# Follow me on LinkedIn: https://www.linkedin.com/in/heyvaldemar/
# Follow me on GitHub: https://github.com/heyvaldemar

# Communication
# Chat with IT pros on Discord: https://discord.gg/AJQGCCBcqf
# Reach me at ask@sre.gg

# Give Thanks
# Support on GitHub: https://github.com/sponsors/heyValdemar
# Support on Patreon: https://www.patreon.com/heyValdemar
# Support on BuyMeaCoffee: https://www.buymeacoffee.com/heyValdemar
# Support on Ko-fi: https://ko-fi.com/heyValdemar
# Support on PayPal: https://www.paypal.com/paypalme/heyValdemarCOM

version: '3.8'

x-default-opts:
  &default-opts
  logging:
    options:
      max-size: "10m"

networks:
  keycloak-network:
    driver: overlay
  traefik-network:
    external: true

volumes:
  keycloak-postgres:
  keycloak-postgres-backups:

services:
  postgres:
    <<: *default-opts
    # Image tag (replace with yours)
    image: postgres:14
    volumes:
      - keycloak-postgres:/var/lib/postgresql/data
    environment:
      # Database name (replace with yours)
      POSTGRES_DB: keycloakdb
      # Database user (replace with yours)
      POSTGRES_USER: keycloakdbuser
      POSTGRES_PASSWORD: EqhvLbsPhrkkZjcaGWcV7qT
    networks:
      - keycloak-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -h 127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 60s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        delay: 15s
        parallelism: 1
        monitor: 10s
        failure_action: rollback
        max_failure_ratio: 0.55
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.55'
          memory: 1G
        reservations:
          cpus: '0.35'
          memory: 512M

  keycloak:
    <<: *default-opts
    # Image tag (replace with yours)
    image: quay.io/keycloak/keycloak:25.0
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_DATABASE: keycloakdb
      KC_DB_USERNAME: keycloakdbuser
      KC_DB_PASSWORD: EqhvLbsPhrkkZjcaGWcV7qT
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: keycloakadmin
      KEYCLOAK_ADMIN_PASSWORD: keycloak.heyvaldemar.net
      KC_HEALTH_ENABLED: 'true'
      KC_HOSTNAME: keycloak.heyvaldemar.net
      KC_HTTP_ENABLED: 'true'
      KC_PROXY_HEADERS: 'xforwarded'
      PROXY_ADDRESS_FORWARDING: 'true'
    networks:
      - keycloak-network
      - traefik-network
    healthcheck:
      test: 
      - "CMD-SHELL"
      - |
        exec 3<>/dev/tcp/localhost/9000 &&
        echo -e 'GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n' >&3 &&
        cat <&3 | tee /tmp/healthcheck.log | grep -q '200 OK'
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 90s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == worker
      update_config:
        delay: 15s
        parallelism: 1
        monitor: 10s
        failure_action: rollback
        max_failure_ratio: 0.55
      # Container resources (replace with yours)
      resources:
        limits:
          cpus: '0.55'
          memory: 2G
        reservations:
          cpus: '0.35'
          memory: 1G
      labels:
        - "traefik.enable=true"
        # Keycloak URL (replace with yours)
        - "traefik.http.routers.keycloak.rule=Host(`keycloak.heyvaldemar.net`)"
        - "traefik.http.routers.keycloak.service=keycloak"
        - "traefik.http.routers.keycloak.entrypoints=websecure"
        - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
        - "traefik.http.routers.keycloak.tls=true"
        - "traefik.http.routers.keycloak.tls.certresolver=letsencrypt"
        - "traefik.http.services.keycloak.loadbalancer.passhostheader=true"
        - "traefik.http.routers.keycloak.middlewares=compresstraefik"
        - "traefik.http.middlewares.compresstraefik.compress=true"
    depends_on:
      - postgres

    depends_on:
      - postgres
      - keycloak
